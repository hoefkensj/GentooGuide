#!/usr/bin/env bash
# ############################################################################
# # PATH: /opt/local/config/rc/bash               AUTHOR: Hoefkens.j@gmail.com
# # FILE: 311_history.conf                                 2023-04-04 09:33:40
# ############################################################################
#
HISTSIZE=-1 
HISTFILESIZE="$HISTSIZE" 
HISTCONTROL=''
HISTCACHEDIR="/var/cache"
HISTDIR="${HISTCACHEDIR}/history/bash"
HISTPFIX="history"
HISTFILE="${HISTDIR}/${HISTPFIX}.$$"
HISTSESSION="${HISTDIR}/${HISTPFIX}.session.$$"

HISTSYSFULL="${HISTDIR}/system.full.${HISTPFIX}"
HISTSYSUNIQ="${HISTDIR}/system.uniq.${HISTPFIX}"
HISTSYSINIT="${HISTDIR}/system.init.${HISTPFIX}"
function history_bash() {
	function history_install()	{
		[[ ! -d "$HISTDIR" 			]]	&& install -m 777 -d "$HISTDIR"
		[[ ! -f "$HISTSYSFULL" 		]]	&& install -m 777 /dev/null "$HISTSYSFULL"
		[[ ! -f "$HISTSYSUNIQ"		]]	&& install -m 777 /dev/null "$HISTSYSUNIQ"	
		[[ ! -f "$HISTSYSINIT"		]]	&& install -m 777 /dev/null "$HISTSYSINIT"	
	}
	function history_session_clean()	{
		[[ -f "$HISTSESSION" ]]	&& cat "$HISTSESSION" >> "$HISTSYSFULL"
		install -m 777 /dev/null "$HISTSESSION"
		install -m 777 /dev/null "$HISTFILE"
	}
	function history_session_start()	{
		local STAMP
		$__FNC history_session_clean
		STAMP=$( $__FNC stamp)
		echo "$STAMP" >> "$HISTSESSION"
		echo "$STAMP" >> "$HISTSYSFULL"
		$__FNC uniq  > "$HISTSYSUNIQ"
		cat "$HISTSYSUNIQ" > "$HISTFILE"
		$__FNC active >> "$HISTFILE"
		builtin history -r "$HISTFILE"
		[[ "${PROMPT_COMMAND}" != *"$__FNC"* ]] && export PROMPT_COMMAND="$__FNC ; ${PROMPT_COMMAND}"
	}
	function history_session_stop()	{
		rm HISTFILE
		rm HISTSESSION
	}	
	function history_update()	{
		builtin history -a "$HISTSESSION"
		builtin history -a "$HISTSYSFULL"
		builtin history -c	
		cat "$HISTSYSUNIQ" > "$HISTFILE"
		history_active_sessions >>"$HISTFILE"
		cat "$HISTSESSION" >> "$HISTFILE"
		builtin history -r "$HISTFILE"
	}
	function history_uniq ()	{
		tac "${HISTSYSFULL}" | awk '!seen[$0]++'  | tac
		# awk '{ lines[NR] = $0 } END { for(i=NR;i>=1;i--) if(!seen[lines[i]]++) rev[++j] = lines[i]; for(k=j;k>=1;k--) print rev[k] }' "$1" 
	}
	function history_sessions_active ()	{
		ACTIVE=$(pgrep "$(ps -p $$ -o comm=)")
		PATTERN=$(for pid in $ACTIVE; do echo -n "-e \${pid}\* "; done)
		HISTACTIVE=$(ls "$HISTDIR/$HISTPFIX.session."* 2>/dev/null | grep "$PATTERN")
		for f in $HISTACTIVE; do
			cat "$f"		
		done
	}
	function history_sessions_orphaned ()	{
		ACTIVE=$(pgrep "$(ps -p $$ -o comm=)")
		PATTERN=$(for pid in $ACTIVE; do echo -n "-e \${pid}\* "; done)
		ORPHANED=$(ls "$HISTDIR/$HISTPFIX.session."* 2>/dev/null | grep -v "$PATTERN")
		for f in $HISTACTIVE; do
			cat "$f"		
		done
	}
	function history_show()	{
		builtin history -c
		[[ "$1" != "--all" ]] && cat "$HISTSYSUNIQ" > "$HISTFILE"
		[[ "$1" == "--all" ]] && cat "$HISTSYSFULL" > "$HISTFILE"
		builtin history -r "$HISTFILE"
		builtin history "$@"
	}
	function history_date_stamp() 	{	
	
		sep=$( printf '\x1b[%s;%sm############' 1 37)
		dat=$( printf '\x1b[%s;%sm%s' 1 33 "$( date +%Y%m%d )" )
		usr=$( printf '\x1b[%s;%sm%s' 1 36 "$USER" )
		ats=$( printf '\x1b[%s;%sm@' 0 31 )
		hst=$( printf '\x1b[%s;%sm%s' 1 36 "$HOSTNAME" )
		printf '# %s\t%s  ::  %s%s%s\t%s#' "$sep" "$dat" "$usr" "$ats" "$hst" "$sep"
	}
	local __FNC
	__FNC=${FUNCNAME[0]}
	case "$1" in
		install) history_install ;;
		clean) history_session_clean ;;
		start) history_session_start ;;
		stop) history_session_stop ;;
		update) histrory_update ;;
		uniq) shift && history_uniq "$@" ;;
		active) history_sessions_active ;;
		orphaned) history_sessions_orphaned ;;
		show) shift && history_show "$@" ;;
		stamp) history_date_stamp ;;
	esac
	unset history_install history_session_clean history_session_start history_session_stop histrory_update history_uniq  history_sessions_active history_sessions_orphaned history_show history_date_stamp
}
history_bash start
trap  history_bash stop EXIT



